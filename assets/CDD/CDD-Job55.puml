@startuml

title CDD Job ERD 

left to right direction

!define newtable(x) class x << (T,LimeGreen) >>

!define table(x) class x << (T,mistyrose) >>   
!define view(x) class x << (V,lightblue) >>   
!define table(x) class x << (T,mistyrose) >>  
!define tr(x) class x << (R,red) >>  
!define tf(x) class x << (F,darkorange) >>   
!define af(x) class x << (F,white) >>   
!define fn(x) class x << (F,plum) >>   
!define fs(x) class x << (F,tan) >>   
!define ft(x) class x << (F,wheat) >>   
!define if(x) class x << (F,gaisboro) >>   
!define p(x) class x << (P,indianred) >>   
!define pc(x) class x << (P,lemonshiffon) >>   
!define x(x) class x << (P,linen) >>     
!define primary_key(x) <<pk>> <u>x</u>
!define foreign_key(x) <<fk>> <b>x</b>
!define link( k, y) k }--||  y
hide methods   
hide stereotypes  
skinparam classarrowcolor gray  

table(User)
{
    primary_key(Id)
}

table( EntityCddTeamMember)
{
    primary_key(Id)
    EntityId
    EntityTypeId
    UserId
}

table( Activity)
{
    primary_key(Id)
    ActivityInstructionCddStatusId
}

table( ActivityParty)
{
    primary_key(Id)
    ActivityId
    ContactId
    CompanyId
}

table( Instruction)
{
    primary_key(Id)
    TeamResponsibleForCddId
    CddCompleteId
    RequireCdd
}

table( InstructionParty)
{
    primary_key(Id)
    InstructionId
    ContactId
    CompanyId
}

table( Requirement)
{
    primary_key(Id)
    RequirementCddStatusId
}

table( RequirementParty)
{
    primary_key(Id)
    RequirementId
    ContactId
    CompanyId
}

'table(EnumTypeItem)
'{
'    primary_key(Id)
'}

table( Questionnaire)
{
    primary_key(Id)
    EntityId
    EntityTypeId
    StatusId
    SubmittedByUserId
    Version
    SubmittedTime
}

table( Question)
{
    primary_key(Id)
    TitleId
    SectionTitleId
    TranslationId
    AnswerTypeId
}

table( QuestionAnswer)
{
    primary_key(Id)
    QuestionnaireId 
    QuestionId
}

table( QuestionNote)
{
    primary_key(QuestionnaireId)
    NoteId
}

table(Contact)
{
    primary_key(Id)
}

table(Company)
{
    primary_key(Id)
}

newtable(CDD)
{
    primary_key(Id)
    ContactId
    CompanyId
    ExpiryDate
    Valid
    RiskRating
    DocumentId
}


'Questionnaire ||--|{ Question #line:red : (NEW) A Questionnaire can have many Questions
Questionnaire ||--|{ QuestionAnswer : A Question has Many QuestionAnswer
Questionnaire ||--|{ QuestionNote : A Questionnaire can have many Notes
Question ||--|{ QuestionAnswer : A Question has Many QuestionAnswers

'Activity  ||--|{ EnumTypeItem : ActivityInstructionCddStatusId (Pending, Complete)
'Instruction ||--|{ EnumTypeItem : TeamResponsibleForCddId (CentralCdd,Office)
'Instruction ||--|{ EnumTypeItem : CddCompleteId (Yes,No,preCentralisation)
'Questionnaire ||--|{ EnumTypeItem : StatusId (None,NotSubmitted,Submitted)
'Questionnaire ||--|{ EnumTypeItem : EntityTypeId (Activity,Instruction...)

Questionnaire ..> Activity #line:red; : EntityId (Reference)
Questionnaire ..> Instruction #line:red; : EntityId (Reference)

User ||--|{ EntityCddTeamMember

EntityCddTeamMember ..> Activity #line:red; : EntityId (Reference)
EntityCddTeamMember ..> Instruction #line:red; : EntityId (Reference)
EntityCddTeamMember ..> Requirement #line:red; : EntityId (Reference)

Activity ||--|{ ActivityParty
Instruction ||--|{ InstructionParty
Requirement ||--|{ RequirementParty

ActivityParty ||--|| Contact
ActivityParty ||--|| Company

InstructionParty ||--|| Contact
InstructionParty ||--|| Company

RequirementParty ||--|| Contact
RequirementParty ||--|| Company

newtable( CddJob)
{
    primary_key(Id)
    UserId
    CDDId
    NextActionId
    ActionTypeId
    Priority
    -CDDJobStatus
}

newtable(Action)
{
    primary_key(Id)
    ActionOwnerId
    CddJobId
    Action
    -ActionCreatedDateTime
    ExpectedCompletionDateTime 
    
}

newtable(Notify)
{
    -primary_key(Id)
    -NotifyUserId
    -NotifiedDateTime
}

table( CddJobQuality)
{
    -primary_key(Id)
    -CheckedById
    -Quality
}

table( CddJobDefects)
{
    -primary_key(Id)
    -Defect
}

'table( CDDQuestionnaire)
'{
'    primary_key(Id)
'    CDDId
'    QuestionnaireId
'}
'table(Questionnaire)
'{
'    primary_key(Id)
'}


EntityCddTeamMember ||--|{ CddJob : A Cdd Team Member can have many Cdd Jobs


CddJob ||--|| CDD : A CddJob has a CDD
'CddJob ||--|{ EnumTypeItem : ActionType
CddJob ||--|{ Action : A CddJob has Action's\n A Action has a CddJob
CddJob ||--|| CddJobQuality

Action ||--|| User : A Action has a User 
Action ||--|{ Notify : A Action has many Notifications
Notify ||--|| User : Notify has a User

Contact ||--|{ CDD : A contact can have many CDDs
Company ||--|{ CDD : A Company can have many CDDs

'CDD ||--|{ CDDQuestionnaire : A CDD has many Questionnaires
'CDDQuestionnaire }|--|| Questionnaire : A Questionnaire has many CDD's

CddJobQuality ||--|{ User : User perfomring quality check
CddJobQuality ||--|{ CddJobDefects : Quality has many defects
CddJobQuality ||--|{ EnumTypeItem : Quality

@enduml