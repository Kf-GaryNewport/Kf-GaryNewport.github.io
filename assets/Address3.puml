@startuml Address

class Company {
    + Name : string <<get>> <<set>>
    + AlternativeName : string <<get>> <<set>>
    + WebsiteUrl : string <<get>> <<set>>
    + ClientCarePageUrl : string <<get>> <<set>>
    + Description : string <<get>> <<set>>
    + Valid : bool <<get>> <<set>>
    + Email : string <<get>> <<set>>
    + CompanyCategoryId : Guid? <<get>> <<set>>
    + <<virtual>> CompanyCategory : EnumTypeItem <<get>> <<set>>
    + CompanyTypeId : Guid? <<get>> <<set>>
    + <<virtual>> CompanyType : EnumTypeItem <<get>> <<set>>
    + <<virtual>> CompaniesContacts : ICollection<CompanyContact> <<get>> <<set>>
    + ClientCareStatusId : Guid? <<get>> <<set>>
    + <<virtual>> ClientCareStatus : EnumTypeItem <<get>> <<set>>
    + RelationshipManagerId : Guid? <<get>> <<set>>
    + StandaloneCompany : bool <<get>> <<set>>
    + <<virtual>> RelationshipManager : User <<get>> <<set>>
    + <<virtual>> SapUniqueNumber : SapCompanyUniqueNumber <<get>> <<set>>
    + CddWarningFlag : bool <<get>> <<set>>
    + Deleted : bool <<get>> <<set>>
    + <<virtual>> Notes : ICollection<Note> <<get>> <<set>>
    + <<virtual>> CompanyContactNotes : IList<CompanyContactNote> <<get>> <<set>>
    + <<virtual>> CompanyAddresses : ICollection<CompanyAddress> <<get>> <<set>>
    + <<virtual>> Attachments : ICollection<Attachment> <<get>> <<set>>
    + <<virtual>> Portfolios : ICollection<Portfolio> <<get>> <<set>>
    + <<virtual>> HoldingCompanies : ICollection<HoldingCompany> <<get>> <<set>>
    + <<virtual>> ChildCompanies : ICollection<HoldingCompany> <<get>> <<set>>
    + <<virtual>> FundCompanies : ICollection<Company> <<get>> <<set>>
    + <<virtual>> Negotiators : ICollection<CompanyUser> <<get>> <<set>>
    + <<virtual>> CompanyDomains : ICollection<CompanyDomain> <<get>> <<set>>
    + OwningCompanyId : Guid? <<get>> <<set>>
    + <<virtual>> OwningCompany : Company <<get>> <<set>>
    + Version : int <<get>> <<set>>
    + DataHugOnly : bool <<get>> <<set>>
    + HighestDataHugRank : short <<get>> <<set>>
    + LatestLastInteractionDate : DateTimeOffset? <<get>> <<set>>
    + LatestLastInteractionById : Guid? <<get>> <<set>>
    + <<virtual>> LatestLastInteractionBy : User <<get>> <<set>>
    + RegistrationNumber : string <<get>> <<set>>
    + QubeSynchronized : bool <<get>> <<set>>
    + QubeErrorOccurred : bool? <<get>> <<set>>
    + InvestorTypeId : Guid? <<get>> <<set>>
    + InvestorType : EnumTypeItem <<get>> <<set>>
    + TenantTypeId : Guid? <<get>> <<set>>
    + TenantType : EnumTypeItem <<get>> <<set>>
    + HeadOfficeLocationId : Guid? <<get>> <<set>>
    + HeadOfficeLocation : Country <<get>> <<set>>
    + <<virtual>> OrganisationUnitCompanies : ICollection<OrganisationUnitCompany> <<get>> <<set>>
    + AgreementName : string <<get>> <<set>>
}


class CompanyContact {
    + ContactId : Guid <<get>> <<set>>
    + Contact : Contact <<get>> <<set>>
    + CompanyId : Guid <<get>> <<set>>
    + Company : Company <<get>> <<set>>
    + JobTitle : string <<get>> <<set>>
    + NotCurrent : bool <<get>> <<set>>
}

class CompanyContactNote {
    + CompanyId : Guid <<get>> <<set>>
    + <<virtual>> Company : Company <<get>> <<set>>
    + ContactId : Guid <<get>> <<set>>
    + <<virtual>> Contact : Contact <<get>> <<set>>
    + NoteId : Guid <<get>> <<set>>
    + <<virtual>> Note : Note <<get>> <<set>>
}

class CompanyAddress {
    + CompanyId : Guid <<get>> <<set>>
    + <<virtual>> Company : Company <<get>> <<set>>
    + AddressId : Guid <<get>> <<set>>
    + <<virtual>> Address : Address <<get>> <<set>>
    + IsPrimary : bool <<get>> <<set>>
    + Switchboard : string <<get>> <<set>>
    + NotCurrent : bool <<get>> <<set>>
    + ContactCompanyAddresses : ICollection<ContactCompanyAddress> <<get>> <<set>>
}

class SapAddressUniqueNumber {
    + AddressId : Guid <<get>> <<set>>
    + <<virtual>> Address : Address <<get>> <<set>>
    + UniqueNumber : int <<get>> <<set>>
}

interface IValidatableAddress {
    CountryId : Guid <<get>> <<set>>
    AddressFormId : Guid <<get>> <<set>>
    PropertyName : string <<get>> <<set>>
    PropertyNumber : string <<get>> <<set>>
    Line1 : string <<get>> <<set>>
    Line2 : string <<get>> <<set>>
    Line3 : string <<get>> <<set>>
    Postcode : string <<get>> <<set>>
    City : string <<get>> <<set>>
    County : string <<get>> <<set>>
}

interface IFormattableAddress {
    CountryId : Guid <<get>>
    PropertyName : string <<get>>
    PropertyNumber : string <<get>>
    Line1 : string <<get>>
    Line2 : string <<get>>
    Line3 : string <<get>>
    Postcode : string <<get>>
    City : string <<get>>
    County : string <<get>>
}

class CompanyContactAddressResults {
    + CompanyContactAddresses : IList<CompanyContactAddress> <<get>> <<set>>
    + AddressesForFilter : IList<CompanyAddressForFilter> <<get>> <<set>>
    + TotalResults : int <<get>> <<set>>
    + ContactsCount : int <<get>> <<set>>
}

class CompanyContactAddress {
    + ContactId : Guid? <<get>> <<set>>
    + ContactName : string <<get>> <<set>>
    + JobTitle : string <<get>> <<set>>
    + ContactDatahugRank : short <<get>> <<set>>
    + ContactLastInteractionDate : DateTimeOffset? <<get>> <<set>>
    + ContactIsDatahugOnly : bool <<get>> <<set>>
    + IsDeceased : bool <<get>> <<set>>
    + PrimaryBusinessPhone : string <<get>> <<set>>
    + PrimaryHomePhone : string <<get>> <<set>>
    + PrimaryMobilePhone : string <<get>> <<set>>
    + PrimaryEmail : string <<get>> <<set>>
    + NegotiatorName : string <<get>> <<set>>
    + NegotiatorDepartment : string <<get>> <<set>>
    + NegotiatorActive : bool? <<get>> <<set>>
    + AddressId : Guid? <<get>> <<set>>
    + AddressCountryId : Guid? <<get>> <<set>>
    + AddressPropertyName : string <<get>> <<set>>
    + AddressPropertyNumber : string <<get>> <<set>>
    + AddressLine1 : string <<get>> <<set>>
    + AddressLine2 : string <<get>> <<set>>
    + AddressLine3 : string <<get>> <<set>>
    + AddressPostcode : string <<get>> <<set>>
    + AddressCity : string <<get>> <<set>>
    + AddressCounty : string <<get>> <<set>>
    + PropertyId : Guid? <<get>> <<set>>
    + AddressIsPrimary : bool? <<get>> <<set>>
    + Switchboard : string <<get>> <<set>>
    + CompanyId : Guid <<get>> <<set>>
    + CompanyName : string <<get>> <<set>>
}
class CompanyAddressForFilter {
    + Id : Guid <<get>> <<set>>
    + CountryId : Guid <<get>> <<set>>
    + AddressFormId : Guid <<get>> <<set>>
    + CountryIsoCode : string <<get>> <<set>>
    + City : string <<get>> <<set>>
    + PropertyName : string <<get>> <<set>>
    + PropertyNumber : string <<get>> <<set>>
    + Line1 : string <<get>> <<set>>
    + Line2 : string <<get>> <<set>>
    + Line3 : string <<get>> <<set>>
    + Postcode : string <<get>> <<set>>
    + County : string <<get>> <<set>>
    + PropertyId : Guid? <<get>> <<set>>
}


BaseAuditableEntity <|-- Company
IEntityWithAttachments <|-- Company
IEntityWithNotes <|-- Company
ISoftDeletableEntity <|-- Company
IEntityWithVersion <|-- Company
Company o-- CompanyAddress
Company o-- OrganisationUnitCompany
Company o-- CompanyContact
Company o-- CompanyContactNote

BaseEntity <|-- CompanyContact
BaseEntity <|-- CompanyContactNote
BaseAuditableEntity <|-- CompanyAddress
CompanyAddress o-- ContactCompanyAddress

CompanyContactAddressResults o-- CompanyContactAddress
CompanyContactAddressResults o-- CompanyAddressForFilter

@enduml