@startuml TennancyProgressionDb

left to right direction

!define table(x) class x << (T,mistyrose) >>   
!define view(x) class x << (V,lightblue) >>   
!define table(x) class x << (T,mistyrose) >>  
!define tr(x) class x << (R,red) >>  
!define tf(x) class x << (F,darkorange) >>   
!define af(x) class x << (F,white) >>   
!define fn(x) class x << (F,plum) >>   
!define fs(x) class x << (F,tan) >>   
!define ft(x) class x << (F,wheat) >>   
!define if(x) class x << (F,gaisboro) >>   
!define p(x) class x << (P,indianred) >>   
!define pc(x) class x << (P,lemonshiffon) >>   
!define x(x) class x << (P,linen) >>     
!define primary_key(x) <<pk>> <u>x</u>
!define foreign_key(x) <<fk>> <b>x</b>
!define link( k, y) k }--||  y
hide methods   
hide stereotypes  
skinparam classarrowcolor gray  

table( Tenancy)
{
    primary_key(Id)
    ActivityId
}

table( Asset)
{
    primary_key(Id)
    AddressId
}

table( Activity)
{
    primary_key(Id)
}

table( Address)
{
    primary_key(Id)
    PropertyName
    PropertyNumber
    Line1
    Line2
    Line3
    PostCode
    County
    CountryId
}

table( Country)
{
    primary_key(Id)
    IsoCode
    DiallingCode
    CurrencyId
    DeafultLivingAreaUnitId
}

table( EnumTypeItem)
{
    primary_key(Id)
    Code
    EnumTypeId
    PrimarySortOrder
    SecondarySortOrder
}

table( EnumType)
{
    primary_key(Id)
}

table( TenancyParty)
{
    primary_key(Id)
    TenancyId
    TenantTypeId
    ContactId
}

table( Contact)
{
    primary_key(Id)
    FileName
    LastName

}

table( ContactPhone)
{
    primary_key(Id)
    ContactId
    Number
    PhoneTypeId
}

table( ContactAddress)
{
    primary_key(Id)
    ContactId
    AddressId
}

table( ContactEmail)
{
    primary_key(Id)
    ContactId
    Email
}

Tenancy <-- Activity : ActivityId
Tenancy <-- Asset : AssetId
Asset <-- Address : AddressId
Address <-- Country : CountryId
Country <-- EnumTypeItem : CurrencyId
EnumTypeItem <-- EnumType : EnumTypeId

TenancyParty <-- Tenancy : TenancyId
TenancyParty <-- Contact : ContactId

ContactPhone <-- EnumTypeItem : PhoneTypeId
ContactPhone <-- Contact : ContactId

ContactAddress <-- Contact : ContactId
ContactAddress <-- Address : AddressId

ContactEmail <-- Contact : ContactId
@enduml